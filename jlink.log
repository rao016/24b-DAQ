
T094C 066:963 SEGGER J-Link V6.12 Log File (0001ms, 3011ms total)
T094C 066:963 DLL Compiled: Nov 25 2016 18:08:26 (0001ms, 3011ms total)
T094C 066:963 Logging started @ 2017-09-14 09:46 (0001ms, 3011ms total)
T094C 067:023 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0006ms, 3017ms total)
T094C 067:122 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0002ms, 3019ms total)
T094C 067:124 JLINK_GetHWStatus(...)  returns 0x00 (0003ms, 3022ms total)
T094C 067:127 JLINK_ClrRESET() (0004ms, 3026ms total)
T094C 067:131 JLINK_SetRESET() (0000ms, 3026ms total)
T094C 067:132 JLINK_ClrRESET() (0004ms, 3030ms total)
T094C 067:137 JLINK_ClrTCK()  returns 0x00 (0001ms, 3032ms total)
T094C 067:139 JLINK_SetRESET() (0002ms, 3034ms total)
T094C 067:141 JLINK_Clock()  returns 0x00 (0002ms, 3036ms total)
T094C 067:143 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0006ms, 3042ms total)
T094C 067:149 JLINK_SetSpeed(50) (0004ms, 3046ms total)
T094C 067:153 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 3046ms total)
T094C 067:153 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 3054ms total)
T094C 067:161 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 3054ms total)
T094C 067:161 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 3054ms total)
T094C 067:161 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 3054ms total)
T094C 067:161 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 3057ms total)
T094C 067:164 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 3057ms total)
T094C 067:164 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 3057ms total)
T094C 067:164 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 3057ms total)
T094C 067:164 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 3057ms total)
T094C 067:164 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 3057ms total)
T094C 067:164 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0003ms, 3060ms total)
T094C 067:167 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 3060ms total)
T094C 067:167 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0005ms, 3065ms total)
T094C 067:172 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 3065ms total)
T094C 067:172 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 3065ms total)
T094C 067:172 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 3065ms total)
T094C 067:172 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 3068ms total)
T094C 067:175 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 3068ms total)
T094C 067:175 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 3068ms total)
T094C 067:196 JLINK_WriteU32(0x41002100, 0x00000010) >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF>
 >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+ -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0377ms, 3445ms total)
T094C 067:573 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 00  returns 0x00 (0007ms, 3452ms total)
T094C 067:805 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 01  returns 0x00 (0008ms, 3460ms total)
T094C 067:813 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 3461ms total)
T094C 067:853 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 3462ms total)
T094C 067:854 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 3462ms total)
T094C 067:854 JLINK_SetSpeed(4000) (0001ms, 3463ms total)
T094C 067:855 JLINK_ResetPullsRESET(OFF) (0000ms, 3463ms total)
T094C 067:855 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:
ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0107ms, 3570ms total)
T094C 067:962 JLINK_Halt()  returns 0x00 (0005ms, 3575ms total)
T094C 067:980 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 3575ms total)
T094C 067:980 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0001ms, 3576ms total)
T0F08 068:006 JLINK_IsHalted()  returns TRUE (0019ms, 3595ms total)
T094C 068:025 JLINK_BeginDownload(Flags = 0x00) (0000ms, 3576ms total)
T094C 068:025 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 3576ms total)
T094C 068:026 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 3576ms total)
T0F08 068:028 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0001ms, 3577ms total)
T0F08 068:029 JLINK_ReadReg(R15 (PC)) -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1328 kHz -- Preparing target -- Downloading RAMCode -- Checking target RAM & preparing RAMCode
 -- End of preparing flash programmingCPU is running at very low speed (1328 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1328 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000) -- CPU_ReadMem(256 bytes @ 0x00000100)
 -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00) -- CPU_ReadMem(256 bytes @ 0x00000E00)
 -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400) -- CPU_ReadMem(256 bytes @ 0x00001500)
 -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restore target -- Restore memory -- Restoring CPU registers
 -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.529s (Prepare: 0.147s, Compare: 0.941s, Erase: 0.000s, Program: 2.172s, Verify: 1.255s, Restore: 0.011s)  returns 0x0000911C (4521ms, 8098ms total)
T094C 072:550 JLINK_EndDownload()  returns 0x00 (0000ms, 8098ms total)
T0F54 072:714 JLINK_Halt()  returns 0x00 (0000ms, 8098ms total)
T0F54 072:714 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8098ms total)
T0F54 072:714 JLINK_ReadReg(R13 (SP))  returns 0x20002B90 (0000ms, 8098ms total)
T0F54 072:727 JLINK_ReadMemHW(0x0000911C, 0x0004 Bytes, ...) -- CPU_ReadMem(4 bytes @ 0x0000911C) - Data: 80 B5 82 B0  returns 0x00 (0003ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R0)  returns 0x00000000 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R1)  returns 0x0000F7F4 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R2)  returns 0x200001C4 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R3)  returns 0x200002B8 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R4)  returns 0x20002B5F (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R5)  returns 0xEFDEBFF7 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R6)  returns 0x71BE6F1B (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R7)  returns 0x20002B80 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R8)  returns 0xFA75FFF1 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R9)  returns 0xAEEFB4F4 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R10)  returns 0xCAEEBFE1 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R11)  returns 0xBFCBF5B3 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R12)  returns 0x20002AF8 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R13 (SP))  returns 0x20002B90 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R14)  returns 0x00009357 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(XPSR)  returns 0x81000000 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(MSP)  returns 0x20002B90 (0000ms, 8101ms total)
T0F54 072:730 JLINK_ReadReg(PSP)  returns 0xFF97E7EC (0001ms, 8102ms total)
T0F54 072:731 JLINK_ReadReg(PRIMASK)  returns 0x00000000 (0000ms, 8102ms total)
T0F54 072:731 JLINK_ReadReg(BASEPRI)  returns 0x00000000 (0000ms, 8102ms total)
T0F54 072:731 JLINK_ReadReg(FAULTMASK)  returns 0x00000000 (0000ms, 8102ms total)
T0F54 072:731 JLINK_ReadReg(CONTROL)  returns 0x00000000 (0000ms, 8102ms total)
T0F54 072:731 JLINK_ReadMemHW(0x0000911C, 0x0002 Bytes, ...) -- CPU_ReadMem(2 bytes @ 0x0000911C) - Data: 80 B5  returns 0x00 (0003ms, 8105ms total)
T0F08 072:754 JLINK_IsHalted()  returns TRUE (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R0)  returns 0x00000000 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R1)  returns 0x0000F7F4 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R2)  returns 0x200001C4 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R3)  returns 0x200002B8 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R4)  returns 0x20002B5F (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R5)  returns 0xEFDEBFF7 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R6)  returns 0x71BE6F1B (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R7)  returns 0x20002B80 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R8)  returns 0xFA75FFF1 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R9)  returns 0xAEEFB4F4 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R10)  returns 0xCAEEBFE1 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R11)  returns 0xBFCBF5B3 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R12)  returns 0x20002AF8 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R13 (SP))  returns 0x20002B90 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R14)  returns 0x00009357 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(XPSR)  returns 0x81000000 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(MSP)  returns 0x20002B90 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(PSP)  returns 0xFF97E7EC (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(PRIMASK)  returns 0x00000000 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(BASEPRI)  returns 0x00000000 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(FAULTMASK)  returns 0x00000000 (0000ms, 8105ms total)
T0F54 072:807 JLINK_ReadReg(CONTROL)  returns 0x00000000 (0000ms, 8105ms total)
T0F54 072:818 JLINK_ReadMemHW(0x0000911C, 0x0004 Bytes, ...) -- CPU_ReadMem(4 bytes @ 0x0000911C) - Data: 80 B5 82 B0  returns 0x00 (0002ms, 8107ms total)
T0F54 072:847 JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000440) -- CPU_WriteMem(4 bytes @ 0x20000440) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0031ms, 8138ms total)
T0F08 072:878 JLINK_IsHalted()  returns TRUE (0000ms, 8138ms total)
T0F08 072:878 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0001ms, 8139ms total)
T0F08 072:879 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8139ms total)
T0F54 072:889 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8139ms total)
T0F54 072:889 JLINK_ReadReg(R13 (SP))  returns 0x20002B90 (0000ms, 8139ms total)
T0F54 072:889 JLINK_ReadMemHW(0x0000911C, 0x0004 Bytes, ...) -- CPU_ReadMem(4 bytes @ 0x0000911C) - Data: 80 B5 82 B0  returns 0x00 (0002ms, 8141ms total)
T0F54 072:924 JLINK_ReadMemHW(0x000099D0, 0x0001 Bytes, ...) -- CPU_ReadMem(1 bytes @ 0x000099D0) - Data: 80  returns 0x00 (0001ms, 8142ms total)
T0F54 072:972 JLINK_ReadReg(R15 (PC))  returns 0x0000911C (0000ms, 8142ms total)
T0F54 072:973 JLINK_GetNumBPUnits(Type = 0xFFFFFF02)  returns 0x04 (0000ms, 8142ms total)
T0F54 072:973 JLINK_SetBPEx(Addr = 0x000099D0, Type = 0xFFFFFFF2)  returns 0x00000001 (0000ms, 8142ms total)
T0F54 072:973 JLINK_GetBPInfo(BPHandle = 1)  returns 0x00 (0000ms, 8142ms total)
T0F54 072:973 JLINK_Go() -- CPU_WriteMem(16 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE000ED30) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0009ms, 8151ms total)
T0F08 072:982 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8154ms total)
T0F08 073:006 JLINK_IsHalted()  returns TRUE (0004ms, 8155ms total)
T0F08 073:010 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0002ms, 8153ms total)
T0F08 073:012 JLINK_ReadReg(R15 (PC))  returns 0x000099D0 (0000ms, 8153ms total)
T0F54 073:015 JLINK_ReadReg(R15 (PC))  returns 0x000099D0 (0000ms, 8153ms total)
T0F54 073:015 JLINK_ReadReg(R13 (SP))  returns 0x20002B80 (0000ms, 8153ms total)
T0F54 073:015 JLINK_ReadMemHW(0x000099D0, 0x0004 Bytes, ...) -- CPU_ReadMem(4 bytes @ 0x000099D0) - Data: 80 B5 00 AF  returns 0x00 (0002ms, 8155ms total)
T094C 073:173 JLINK_ReadMemHW(0x00000000, 0x03FC Bytes, ...) -- CPU_ReadMem(1020 bytes @ 0x00000000) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0x00 (0006ms, 8161ms total)
T0F08 073:229 JLINK_IsHalted()  returns TRUE (0000ms, 8161ms total)
T094C 073:292 JLINK_ReadMemHW(0x000003FC, 0x003C Bytes, ...) -- CPU_ReadMem(60 bytes @ 0x000003FC) - Data: 19 00 01 20 10 4B 98 47 0C 23 FB 18 19 00 05 20 ...  returns 0x00 (0002ms, 8163ms total)
T094C 073:374 JLINK_ReadMemHW(0x00000000, 0x0438 Bytes, ...) -- CPU_ReadMem(1080 bytes @ 0x00000000) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0x00 (0006ms, 8169ms total)
T0F08 073:514 JLINK_IsHalted()  returns TRUE (0002ms, 8171ms total)
T0F08 073:716 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F08 074:043 JLINK_IsHalted()  returns TRUE (0053ms, 8222ms total)
T0F08 074:306 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F08 074:506 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F08 074:706 JLINK_IsHalted()  returns TRUE (0002ms, 8171ms total)
T0F08 074:908 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F08 075:112 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F08 075:313 JLINK_IsHalted()  returns TRUE (0001ms, 8170ms total)
T0F08 075:515 JLINK_IsHalted()  returns TRUE (0000ms, 8169ms total)
T0F54 075:531 JLINK_WriteU32(0xE000EDFC, 0x01000000) -- CPU_WriteMem(4 bytes @ 0xE000EDFC)  returns 0x00 (0001ms, 8170ms total)
T0F54 075:532 JLINK_ReadMem (0xE0001000, 0x0004 Bytes, ...) -- CPU_ReadMem(4 bytes @ 0xE0001000) - Data: 00 00 00 20  returns 0x00 (0001ms, 8171ms total)
T0F54 075:533 JLINK_WriteU32(0xE0001000, 0x20000001)  returns 0x00 (0000ms, 8171ms total)
T0F54 075:533 JLINK_WriteU32(0xE0001028, 0x00000100)  returns 0x00 (0000ms, 8171ms total)
T0F54 075:533 JLINK_ReadMem (0xE0001028, 0x0004 Bytes, ...) -- CPU_WriteMem(4 bytes @ 0xE0001028) -- CPU_ReadMem(4 bytes @ 0xE0001028) - Data: 00 00 00 00  returns 0x00 (0003ms, 8174ms total)
T0F54 075:536 JLINK_WriteU32(0xE0001024, 0x0000001F)  returns 0x00 (0000ms, 8174ms total)
T0F54 075:536 JLINK_ReadMem (0xE0001024, 0x0004 Bytes, ...) -- CPU_WriteMem(4 bytes @ 0xE0001024) -- CPU_ReadMem(4 bytes @ 0xE0001024) - Data: 1F 00 00 00  returns 0x00 (0003ms, 8177ms total)
T0F54 075:540 JLINK_WriteU32(0xE0001038, 0x00000100)  returns 0x00 (0000ms, 8177ms total)
T0F54 075:540 JLINK_ReadMem (0xE0001038, 0x0004 Bytes, ...) -- CPU_WriteMem(4 bytes @ 0xE0001038) -- CPU_ReadMem(4 bytes @ 0xE0001038) - Data: 00 00 00 00  returns 0x00 (0003ms, 8180ms total)
T0F54 075:543 JLINK_WriteU32(0xE0001034, 0x0000001F)  returns 0x00 (0000ms, 8180ms total)
T0F54 075:543 JLINK_ReadMem (0xE0001034, 0x0004 Bytes, ...) -- CPU_WriteMem(4 bytes @ 0xE0001034) -- CPU_ReadMem(4 bytes @ 0xE0001034) - Data: 1F 00 00 00  returns 0x00 (0003ms, 8183ms total)
T0F54 075:547 JLINK_WriteU32(0xE0001020, 0x00000000)  returns 0x00 (0000ms, 8183ms total)
T0F54 075:547 JLINK_WriteU32(0xE0001024, 0x00000000)  returns 0x00 (0000ms, 8183ms total)
T0F54 075:547 JLINK_WriteU32(0xE0001028, 0x00000000)  returns 0x00 (0000ms, 8183ms total)
T0F54 075:547 JLINK_WriteU32(0xE0001030, 0x00000000)  returns 0x00 (0001ms, 8184ms total)
T0F54 075:548 JLINK_WriteU32(0xE0001034, 0x00000000)  returns 0x00 (0000ms, 8184ms total)
T0F54 075:548 JLINK_WriteU32(0xE0001038, 0x00000000)  returns 0x00 (0000ms, 8184ms total)
T0F54 075:548 JLINK_GetBPInfo(BPHandle = 1)  returns 0x00 (0000ms, 8184ms total)
T0F54 075:548 JLINK_ClrBPEx(BPHandle = 0x00000001)  returns 0x00 (0000ms, 8184ms total)
T0F54 075:548 JLINK_ReadReg(R15 (PC))  returns 0x000099D0 (0000ms, 8184ms total)
T0F54 075:549 JLINK_Go() -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE000ED30) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001020) -- CPU_WriteMem(4 bytes @ 0xE0001030) -- CPU_WriteMem(4 bytes @ 0xE0001024) -- CPU_WriteMem(4 bytes @ 0xE0001034) -- CPU_WriteMem(4 bytes @ 0xE0001028) -- CPU_WriteMem(4 bytes @ 0xE0001038) -- CPU_WriteMem(4 bytes @ 0xE0002008) (0007ms, 8191ms total)
T0F08 075:556 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 075:605 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 075:768 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 075:971 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 076:204 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 076:406 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 076:608 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 076:811 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 077:013 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 077:215 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 077:417 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 077:619 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 077:821 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 078:055 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 078:257 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 078:459 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 078:661 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 078:864 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 079:067 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 079:271 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0001ms, 8192ms total)
T0F08 079:504 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 079:706 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 079:908 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 080:111 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 080:314 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 080:518 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 080:721 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 080:956 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 081:158 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 081:364 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 081:568 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 081:771 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 082:007 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0004ms, 8195ms total)
T0F08 082:211 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 082:425 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 082:654 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 082:873 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0005ms, 8196ms total)
T0F08 083:107 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0004ms, 8195ms total)
T0F08 083:312 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 083:515 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 083:717 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 083:919 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 084:122 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 084:355 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0001ms, 8192ms total)
T0F08 084:557 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 084:759 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 084:961 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 085:163 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 085:365 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 085:568 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 085:771 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 086:004 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 086:207 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 086:410 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 086:612 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 086:814 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 087:017 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 087:221 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 087:454 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 087:657 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 087:860 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 088:063 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 088:266 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 088:468 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 088:670 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 088:872 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 089:105 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0001ms, 8192ms total)
T0F08 089:307 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 089:510 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 089:712 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 089:915 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 090:117 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 090:319 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 090:558 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 090:760 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 090:963 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 091:165 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 091:367 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 091:572 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0003ms, 8194ms total)
T0F08 091:805 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F08 092:007 JLINK_IsHalted() -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100)  returns FALSE (0002ms, 8193ms total)
T0F54 092:082 JLINK_Halt()  returns 0x00 (0004ms, 8195ms total)
T0F08 092:209 JLINK_IsHalted()  returns TRUE (0000ms, 8195ms total)
T0F08 092:209 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0002ms, 8197ms total)
T0F08 092:211 JLINK_ReadReg(R15 (PC))  returns 0x00009308 (0000ms, 8197ms total)
T094C 092:213 JLINK_ResetPullsRESET(ON) (0000ms, 8197ms total)
T094C 092:213 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000)
 -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT
 -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0029ms, 0029ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0005ms, 0034ms total)
               (0145ms, 8342ms total)
T094C 111:642 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 8342ms total)
T094C 111:642 JLINK_GetFirmwareString(...) (0000ms, 8342ms total)
T094C 111:642 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 8342ms total)
T094C 111:642 JLINK_GetDLLVersion()  returns 61200 (0000ms, 8342ms total)
T094C 111:701 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 8342ms total)
T094C 111:738 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 8342ms total)
T094C 111:819 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 8343ms total)
T094C 111:820 JLINK_GetHWStatus(...)  returns 0x00 (0001ms, 8344ms total)
T094C 111:821 JLINK_ClrRESET() (0004ms, 8348ms total)
T094C 111:825 JLINK_SetRESET() (0003ms, 8351ms total)
T094C 111:828 JLINK_ClrRESET() (0004ms, 8355ms total)
T094C 111:832 JLINK_ClrTCK()  returns 0x00 (0002ms, 8357ms total)
T094C 111:834 JLINK_SetRESET() (0002ms, 8359ms total)
T094C 111:836 JLINK_Clock()  returns 0x00 (0003ms, 8362ms total)
T094C 111:839 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 8362ms total)
T094C 111:839 JLINK_SetSpeed(50) (0002ms, 8364ms total)
T094C 111:841 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 8364ms total)
T094C 111:841 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 8372ms total)
T094C 111:849 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 8372ms total)
T094C 111:849 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 8372ms total)
T094C 111:849 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 8372ms total)
T094C 111:849 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 8375ms total)
T094C 111:852 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 8375ms total)
T094C 111:852 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 8375ms total)
T094C 111:852 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 8375ms total)
T094C 111:852 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 8375ms total)
T094C 111:852 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 8375ms total)
T094C 111:852 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0003ms, 8378ms total)
T094C 111:855 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 8378ms total)
T094C 111:855 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0002ms, 8380ms total)
T094C 111:857 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 8380ms total)
T094C 111:857 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 8380ms total)
T094C 111:857 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 8380ms total)
T094C 111:857 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0004ms, 8384ms total)
T094C 111:861 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 8384ms total)
T094C 111:861 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 8384ms total)
T094C 111:861 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0008ms, 8392ms total)
T094C 111:869 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0009ms, 8401ms total)
T094C 112:105 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0007ms, 8408ms total)
T094C 112:112 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 8409ms total)
T094C 112:145 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 8410ms total)
T094C 112:146 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 8410ms total)
T094C 112:146 JLINK_SetSpeed(4000) (0001ms, 8411ms total)
T094C 112:147 JLINK_ResetPullsRESET(OFF) (0000ms, 8411ms total)
T094C 112:147 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0163ms, 8574ms total)
T094C 112:310 JLINK_Halt()  returns 0x00 (0004ms, 8578ms total)
T094C 112:316 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 8578ms total)
T094C 112:316 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0001ms, 8579ms total)
T094C 112:346 JLINK_BeginDownload(Flags = 0x00) (0000ms, 8579ms total)
T094C 112:346 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 8579ms total)
T094C 112:346 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 8579ms total)
T0E28 112:355 JLINK_IsHalted()  returns TRUE (0000ms, 8579ms total)
T0E28 112:355 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0002ms, 8581ms total)
T0E28 112:357 JLINK_ReadReg(R15 (PC)) -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1327 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1327 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1327 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory
 -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.679s (Prepare: 0.177s, Compare: 0.962s, Erase: 0.000s, Program: 2.213s, Verify: 1.261s, Restore: 0.064s)  returns 0xFFFFFFFE (4682ms, 13263ms total)
T094C 117:042 JLINK_EndDownload()  returns 0x00 (0000ms, 13263ms total)
T094C 117:043 JLINK_ResetPullsRESET(ON) (0000ms, 13263ms total)
T094C 117:043 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0029ms, 0029ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0036ms total)
               (0156ms, 13419ms total)
T094C 215:101 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 13419ms total)
T094C 215:101 JLINK_GetFirmwareString(...) (0000ms, 13419ms total)
T094C 215:101 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 13419ms total)
T094C 215:101 JLINK_GetDLLVersion()  returns 61200 (0000ms, 13419ms total)
T094C 215:163 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 13419ms total)
T094C 215:198 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 13420ms total)
T094C 215:269 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 13421ms total)
T094C 215:270 JLINK_GetHWStatus(...)  returns 0x00 (0001ms, 13422ms total)
T094C 215:271 JLINK_ClrRESET() (0004ms, 13426ms total)
T094C 215:275 JLINK_SetRESET() (0001ms, 13427ms total)
T094C 215:276 JLINK_ClrRESET() (0005ms, 13432ms total)
T094C 215:281 JLINK_ClrTCK()  returns 0x00 (0002ms, 13434ms total)
T094C 215:283 JLINK_SetRESET() (0003ms, 13437ms total)
T094C 215:286 JLINK_Clock()  returns 0x00 (0003ms, 13440ms total)
T094C 215:289 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 13440ms total)
T094C 215:289 JLINK_SetSpeed(50) (0001ms, 13441ms total)
T094C 215:290 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 13441ms total)
T094C 215:290 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 13449ms total)
T094C 215:298 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 13449ms total)
T094C 215:298 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 13449ms total)
T094C 215:298 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 13449ms total)
T094C 215:298 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 13452ms total)
T094C 215:301 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 13452ms total)
T094C 215:301 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 13452ms total)
T094C 215:301 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 13452ms total)
T094C 215:301 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 13452ms total)
T094C 215:301 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 13452ms total)
T094C 215:301 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0004ms, 13456ms total)
T094C 215:305 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 13456ms total)
T094C 215:305 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0004ms, 13460ms total)
T094C 215:309 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 13460ms total)
T094C 215:309 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 13460ms total)
T094C 215:309 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 13460ms total)
T094C 215:309 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 13463ms total)
T094C 215:312 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 13463ms total)
T094C 215:312 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 13463ms total)
T094C 215:312 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 13470ms total)
T094C 215:319 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0008ms, 13478ms total)
T094C 215:555 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0007ms, 13485ms total)
T094C 215:562 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 13486ms total)
T094C 215:591 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 13487ms total)
T094C 215:592 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 13487ms total)
T094C 215:592 JLINK_SetSpeed(4000) (0001ms, 13488ms total)
T094C 215:593 JLINK_ResetPullsRESET(OFF) (0000ms, 13488ms total)
T094C 215:593 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0159ms, 13647ms total)
T094C 215:753 JLINK_Halt()  returns 0x00 (0004ms, 13651ms total)
T094C 215:758 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 13651ms total)
T094C 215:758 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0002ms, 13653ms total)
T0638 215:768 JLINK_IsHalted()  returns TRUE (0000ms, 13653ms total)
T0638 215:768 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0001ms, 13654ms total)
T0638 215:769 JLINK_ReadReg(R15 (PC))  returns 0xFFFFFFFE (0000ms, 13654ms total)
T094C 215:792 JLINK_BeginDownload(Flags = 0x00) (0000ms, 13654ms total)
T094C 215:792 JLINK_WriteMem(0x00000000, 0xF420 Bytes, ...) - Data: 90 2B 00 20 19 8F 00 00 11 90 00 00 11 90 00 00 ...  returns 0xF420 (0000ms, 13654ms total)
T094C 215:792 JLINK_WriteMem(0x0000F420, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 13654ms total)
T0638 215:969 JLINK_IsHalted()  returns TRUE (0001ms, 13655ms total)
T094C 215:971 JLINK_EndDownload() -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1328 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1328 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1328 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF6FF (7 Sectors, 1 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CRC does not match for sectors 0-6 -- End of comparing flash -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming
 -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F400 - 0x0000F6FF (003 Sectors, 768 Bytes) -- End of flash programming -- 0x0000 - 0xF6FF (247 Sectors, 61 KB)
 -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63232 bytes)
 -- Total time needed: 4.605s (Prepare: 0.178s, Compare: 0.937s, Erase: 0.000s, Program: 2.172s, Verify: 1.251s, Restore: 0.064s)  returns 0xF700 (4609ms, 18263ms total)
T094C 220:580 JLINK_ResetPullsRESET(ON) (0000ms, 18263ms total)
T094C 220:582 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0030ms, 0030ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0037ms total)
               (0165ms, 18428ms total)
T0F54 358:269 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 18428ms total)
T0F54 358:270 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0027ms, 18455ms total)
T0F54 359:384 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 18455ms total)
T0F54 359:384 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 18478ms total)
T094C 359:678 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 18478ms total)
T094C 359:678 JLINK_GetFirmwareString(...) (0000ms, 18478ms total)
T094C 359:678 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 18478ms total)
T094C 359:678 JLINK_GetDLLVersion()  returns 61200 (0001ms, 18479ms total)
T094C 359:735 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 18479ms total)
T094C 359:791 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 18479ms total)
T094C 359:850 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 18479ms total)
T094C 359:850 JLINK_GetHWStatus(...)  returns 0x00 (0001ms, 18480ms total)
T094C 359:851 JLINK_ClrRESET() (0004ms, 18484ms total)
T094C 359:855 JLINK_SetRESET() (0002ms, 18486ms total)
T094C 359:857 JLINK_ClrRESET() (0006ms, 18492ms total)
T094C 359:863 JLINK_ClrTCK()  returns 0x00 (0001ms, 18493ms total)
T094C 359:864 JLINK_SetRESET() (0003ms, 18496ms total)
T094C 359:867 JLINK_Clock()  returns 0x00 (0003ms, 18499ms total)
T094C 359:870 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 18499ms total)
T094C 359:870 JLINK_SetSpeed(50) (0001ms, 18500ms total)
T094C 359:871 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 18500ms total)
T094C 359:871 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 18508ms total)
T094C 359:879 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 18508ms total)
T094C 359:879 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 18508ms total)
T094C 359:879 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 18508ms total)
T094C 359:879 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 18511ms total)
T094C 359:882 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 18511ms total)
T094C 359:882 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 18511ms total)
T094C 359:882 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 18511ms total)
T094C 359:882 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 18511ms total)
T094C 359:882 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 18511ms total)
T094C 359:882 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0003ms, 18514ms total)
T094C 359:885 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 18514ms total)
T094C 359:885 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0003ms, 18517ms total)
T094C 359:888 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 18517ms total)
T094C 359:888 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 18517ms total)
T094C 359:888 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 18517ms total)
T094C 359:888 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 18520ms total)
T094C 359:891 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 18520ms total)
T094C 359:891 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 18520ms total)
T094C 359:891 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 18527ms total)
T094C 359:898 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0008ms, 18535ms total)
T094C 360:106 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0007ms, 18542ms total)
T094C 360:113 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 18543ms total)
T094C 360:143 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 18544ms total)
T094C 360:144 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 18544ms total)
T094C 360:144 JLINK_SetSpeed(4000) (0001ms, 18545ms total)
T094C 360:145 JLINK_ResetPullsRESET(OFF) (0000ms, 18545ms total)
T094C 360:145 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0174ms, 18719ms total)
T094C 360:319 JLINK_Halt()  returns 0x00 (0006ms, 18725ms total)
T094C 360:326 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 18725ms total)
T094C 360:326 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0003ms, 18728ms total)
T0CC0 360:355 JLINK_IsHalted()  returns TRUE (0000ms, 18728ms total)
T0CC0 360:355 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0000ms, 18728ms total)
T0CC0 360:355 JLINK_ReadReg(R15 (PC))  returns 0xFFFFFFFE (0000ms, 18728ms total)
T094C 360:357 JLINK_BeginDownload(Flags = 0x00) (0000ms, 18728ms total)
T094C 360:357 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 18728ms total)
T094C 360:357 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 18728ms total)
T0CC0 360:556 JLINK_IsHalted()  returns TRUE (0001ms, 18729ms total)
T094C 360:558 JLINK_EndDownload() -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1327 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1327 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1327 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory
 -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.668s (Prepare: 0.184s, Compare: 0.961s, Erase: 0.000s, Program: 2.194s, Verify: 1.262s, Restore: 0.065s)  returns 0xF900 (4672ms, 23400ms total)
T0F54 365:230 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 23400ms total)
T094C 365:231 JLINK_ResetPullsRESET(ON) (0000ms, 23400ms total)
T0F54 365:232 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23423ms total)
T094C 365:255 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0029ms, 0029ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0036ms total)
               (0157ms, 23580ms total)
T0F54 366:463 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23581ms total)
T0F54 366:464 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23604ms total)
T0F54 367:659 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23605ms total)
T0F54 367:661 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23628ms total)
T0F54 368:859 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 23630ms total)
T0F54 368:861 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23653ms total)
T0F54 370:056 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23654ms total)
T0F54 370:057 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23677ms total)
T0F54 371:262 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23678ms total)
T0F54 371:263 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23701ms total)
T0F54 372:460 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23702ms total)
T0F54 372:461 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23725ms total)
T0F54 373:641 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23726ms total)
T0F54 373:642 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23749ms total)
T0F54 374:859 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23750ms total)
T0F54 374:861 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23773ms total)
T0F54 376:063 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23774ms total)
T0F54 376:064 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 23796ms total)
T0F54 377:186 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 23796ms total)
T0F54 377:186 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23819ms total)
T0F54 378:402 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23820ms total)
T0F54 378:403 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23843ms total)
T0F54 379:587 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23844ms total)
T0F54 379:588 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23867ms total)
T0F54 380:806 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 23869ms total)
T0F54 380:808 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23892ms total)
T0F54 382:010 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23893ms total)
T0F54 382:012 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23916ms total)
T0F54 383:207 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 23918ms total)
T0F54 383:209 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23941ms total)
T0F54 384:395 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23942ms total)
T0F54 384:396 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23965ms total)
T0F54 385:592 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23966ms total)
T0F54 385:593 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 23989ms total)
T0F54 386:799 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 23990ms total)
T0F54 386:800 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24013ms total)
T0F54 387:999 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 24014ms total)
T0F54 388:001 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24037ms total)
T0F54 389:164 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 24038ms total)
T0F54 389:165 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0026ms, 24064ms total)
T0F54 390:363 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 24064ms total)
T0F54 390:363 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24087ms total)
T0F54 391:496 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 24088ms total)
T0F54 391:497 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24111ms total)
T0F54 392:678 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 24111ms total)
T0F54 392:679 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 24135ms total)
T0F54 393:808 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 24135ms total)
T0F54 393:808 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0031ms, 24166ms total)
T0F54 394:944 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 24167ms total)
T0F54 394:945 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24190ms total)
T0F54 396:115 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 24190ms total)
T0F54 396:116 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 24212ms total)
T094C 396:901 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 24212ms total)
T094C 396:901 JLINK_GetFirmwareString(...) (0000ms, 24212ms total)
T094C 396:901 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 24212ms total)
T094C 396:901 JLINK_GetDLLVersion()  returns 61200 (0000ms, 24212ms total)
T094C 396:945 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 24213ms total)
T094C 396:978 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 24214ms total)
T094C 397:018 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 24214ms total)
T094C 397:018 JLINK_GetHWStatus(...)  returns 0x00 (0002ms, 24216ms total)
T094C 397:020 JLINK_ClrRESET() (0002ms, 24218ms total)
T094C 397:022 JLINK_SetRESET() (0002ms, 24220ms total)
T094C 397:024 JLINK_ClrRESET() (0005ms, 24225ms total)
T094C 397:029 JLINK_ClrTCK()  returns 0x00 (0001ms, 24226ms total)
T094C 397:030 JLINK_SetRESET() (0003ms, 24229ms total)
T094C 397:033 JLINK_Clock()  returns 0x00 (0003ms, 24232ms total)
T094C 397:036 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 24232ms total)
T094C 397:036 JLINK_SetSpeed(50) (0001ms, 24233ms total)
T094C 397:037 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 24233ms total)
T094C 397:037 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0007ms, 24240ms total)
T094C 397:044 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 24240ms total)
T094C 397:044 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 24240ms total)
T094C 397:044 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 24240ms total)
T094C 397:044 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 24243ms total)
T094C 397:047 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 24243ms total)
T094C 397:047 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 24243ms total)
T094C 397:047 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 24243ms total)
T094C 397:047 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 24243ms total)
T094C 397:047 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 24243ms total)
T094C 397:047 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0002ms, 24245ms total)
T094C 397:049 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 24245ms total)
T094C 397:049 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0003ms, 24248ms total)
T094C 397:052 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 24248ms total)
T094C 397:052 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 24248ms total)
T094C 397:052 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 24248ms total)
T094C 397:052 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0007ms, 24255ms total)
T094C 397:059 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 24255ms total)
T094C 397:059 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 24255ms total)
T094C 397:060 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 24262ms total)
T094C 397:067 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0008ms, 24270ms total)
T094C 397:305 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0007ms, 24277ms total)
T0F54 397:312 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 24279ms total)
T094C 397:314 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 24279ms total)
T0F54 397:314 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 24302ms total)
T094C 397:365 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 24303ms total)
T094C 397:366 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 24303ms total)
T094C 397:366 JLINK_SetSpeed(4000) (0002ms, 24305ms total)
T094C 397:368 JLINK_ResetPullsRESET(OFF) (0000ms, 24305ms total)
T094C 397:368 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0154ms, 24459ms total)
T094C 397:522 JLINK_Halt()  returns 0x00 (0004ms, 24463ms total)
T094C 397:529 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 24463ms total)
T094C 397:529 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0003ms, 24466ms total)
T094C 397:559 JLINK_BeginDownload(Flags = 0x00) (0000ms, 24466ms total)
T094C 397:559 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 24466ms total)
T094C 397:559 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 24466ms total)
T0A70 397:623 JLINK_IsHalted()  returns TRUE (0000ms, 24466ms total)
T0A70 397:623 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0002ms, 24468ms total)
T0A70 397:625 JLINK_ReadReg(R15 (PC)) -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1328 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1328 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1328 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory
 -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.707s (Prepare: 0.176s, Compare: 0.989s, Erase: 0.000s, Program: 2.208s, Verify: 1.268s, Restore: 0.064s)  returns 0xFFFFFFFE (4700ms, 29168ms total)
T0F54 402:325 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 29168ms total)
T0F54 402:328 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29191ms total)
T094C 402:351 JLINK_EndDownload()  returns 0x00 (0000ms, 29191ms total)
T094C 402:352 JLINK_ResetPullsRESET(ON) (0000ms, 29191ms total)
T094C 402:352 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0028ms, 0028ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0035ms total)
               (0152ms, 29343ms total)
T0F54 403:513 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29344ms total)
T0F54 403:514 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29367ms total)
T0F54 404:691 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29369ms total)
T0F54 404:693 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29392ms total)
T0F54 405:913 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29393ms total)
T0F54 405:915 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29416ms total)
T0F54 407:100 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29417ms total)
T0F54 407:101 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 29441ms total)
T0F54 408:300 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29443ms total)
T0F54 408:302 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29466ms total)
T0F54 409:503 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29467ms total)
T0F54 409:504 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29490ms total)
T0F54 410:706 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29492ms total)
T0F54 410:708 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29515ms total)
T0F54 411:900 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29517ms total)
T0F54 411:902 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29540ms total)
T0F54 413:104 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29541ms total)
T0F54 413:105 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29564ms total)
T0F54 414:310 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29565ms total)
T0F54 414:311 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29588ms total)
T0F54 415:509 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29590ms total)
T0F54 415:511 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29613ms total)
T0F54 416:701 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29615ms total)
T0F54 416:703 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 29637ms total)
T0F54 417:897 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29639ms total)
T0F54 417:899 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29662ms total)
T0F54 419:099 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29664ms total)
T0F54 419:101 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29687ms total)
T0F54 420:296 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29689ms total)
T0F54 420:298 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29712ms total)
T0F54 421:521 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29713ms total)
T0F54 421:522 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 29735ms total)
T0F54 422:697 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29736ms total)
T0F54 422:698 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29759ms total)
T0F54 423:901 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29761ms total)
T0F54 423:903 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29784ms total)
T0F54 425:105 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 29784ms total)
T0F54 425:105 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 29808ms total)
T0F54 426:291 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 29808ms total)
T0F54 426:292 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 29830ms total)
T0F54 427:502 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29831ms total)
T0F54 427:503 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29854ms total)
T0F54 428:699 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 29856ms total)
T0F54 428:701 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29879ms total)
T0F54 429:920 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29880ms total)
T0F54 429:922 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29903ms total)
T0F54 431:099 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29904ms total)
T0F54 431:100 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 29928ms total)
T0F54 432:298 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 29928ms total)
T0F54 432:298 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0025ms, 29953ms total)
T0F54 433:503 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 29953ms total)
T0F54 433:504 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 29975ms total)
T0F54 434:708 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 29976ms total)
T0F54 434:709 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 29999ms total)
T0F54 435:877 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 30001ms total)
T0F54 435:879 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30024ms total)
T0F54 437:059 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30025ms total)
T0F54 437:060 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 30049ms total)
T0F54 438:244 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30050ms total)
T0F54 438:246 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30073ms total)
T0F54 439:457 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30074ms total)
T0F54 439:458 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 30098ms total)
T0F54 440:651 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30099ms total)
T0F54 440:652 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 30123ms total)
T0F54 441:850 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 30125ms total)
T0F54 441:852 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30148ms total)
T0F54 443:039 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30148ms total)
T0F54 443:040 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30171ms total)
T0F54 444:246 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 30173ms total)
T0F54 444:248 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30196ms total)
T0F54 445:446 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 30198ms total)
T0F54 445:448 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30221ms total)
T0F54 446:651 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30222ms total)
T0F54 446:653 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30245ms total)
T0F54 447:851 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30246ms total)
T0F54 447:852 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30269ms total)
T0F54 449:049 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30270ms total)
T0F54 449:050 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30293ms total)
T0F54 450:257 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30293ms total)
T0F54 450:258 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30316ms total)
T0F54 451:449 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30317ms total)
T0F54 451:450 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30340ms total)
T0F54 452:612 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30340ms total)
T0F54 452:613 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30363ms total)
T0F54 453:772 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30363ms total)
T0F54 453:772 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30386ms total)
T0F54 455:327 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0003ms, 30389ms total)
T0F54 455:330 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30412ms total)
T0F54 456:442 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30412ms total)
T0F54 456:443 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30435ms total)
T0F54 457:589 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30436ms total)
T0F54 457:590 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30459ms total)
T0F54 458:746 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 30459ms total)
T0F54 458:746 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30482ms total)
T0F54 459:923 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 30483ms total)
T0F54 459:924 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 30506ms total)
T094C 460:223 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 30506ms total)
T094C 460:223 JLINK_GetFirmwareString(...) (0000ms, 30506ms total)
T094C 460:223 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 30506ms total)
T094C 460:223 JLINK_GetDLLVersion()  returns 61200 (0000ms, 30506ms total)
T094C 460:270 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 30506ms total)
T094C 460:307 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 30506ms total)
T094C 460:350 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 30506ms total)
T094C 460:350 JLINK_GetHWStatus(...)  returns 0x00 (0002ms, 30508ms total)
T094C 460:352 JLINK_ClrRESET() (0003ms, 30511ms total)
T094C 460:355 JLINK_SetRESET() (0001ms, 30512ms total)
T094C 460:356 JLINK_ClrRESET() (0006ms, 30518ms total)
T094C 460:362 JLINK_ClrTCK()  returns 0x00 (0001ms, 30519ms total)
T094C 460:363 JLINK_SetRESET() (0003ms, 30522ms total)
T094C 460:366 JLINK_Clock()  returns 0x00 (0003ms, 30525ms total)
T094C 460:369 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 30525ms total)
T094C 460:369 JLINK_SetSpeed(50) (0002ms, 30527ms total)
T094C 460:371 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 30527ms total)
T094C 460:371 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0007ms, 30534ms total)
T094C 460:378 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 30534ms total)
T094C 460:378 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 30534ms total)
T094C 460:378 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 30534ms total)
T094C 460:378 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0004ms, 30538ms total)
T094C 460:382 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 30538ms total)
T094C 460:382 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 30538ms total)
T094C 460:382 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 30538ms total)
T094C 460:382 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 30538ms total)
T094C 460:382 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 30538ms total)
T094C 460:382 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0003ms, 30541ms total)
T094C 460:385 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 30541ms total)
T094C 460:385 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0002ms, 30543ms total)
T094C 460:387 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 30543ms total)
T094C 460:387 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 30543ms total)
T094C 460:387 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 30543ms total)
T094C 460:387 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 30546ms total)
T094C 460:390 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 30546ms total)
T094C 460:390 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 30546ms total)
T094C 460:390 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 30553ms total)
T094C 460:397 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0007ms, 30560ms total)
T094C 460:605 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0006ms, 30566ms total)
T094C 460:611 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 30567ms total)
T094C 460:639 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 30568ms total)
T094C 460:640 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 30568ms total)
T094C 460:640 JLINK_SetSpeed(4000) (0001ms, 30569ms total)
T094C 460:641 JLINK_ResetPullsRESET(OFF) (0000ms, 30569ms total)
T094C 460:641 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0175ms, 30744ms total)
T094C 460:816 JLINK_Halt()  returns 0x00 (0005ms, 30749ms total)
T094C 460:822 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 30749ms total)
T094C 460:822 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0003ms, 30752ms total)
T094C 460:853 JLINK_BeginDownload(Flags = 0x00) (0000ms, 30752ms total)
T094C 460:853 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 30752ms total)
T094C 460:853 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 30752ms total)
T0AEC 460:855 JLINK_IsHalted()  returns TRUE (0000ms, 30752ms total)
T0AEC 460:855 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0000ms, 30752ms total)
T0AEC 460:855 JLINK_ReadReg(R15 (PC)) -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1328 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1328 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1328 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory
 -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.671s (Prepare: 0.176s, Compare: 0.945s, Erase: 0.000s, Program: 2.212s, Verify: 1.270s, Restore: 0.065s)  returns 0xFFFFFFFE (4676ms, 35428ms total)
T0F54 465:531 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35429ms total)
T094C 465:533 JLINK_EndDownload()  returns 0x00 (0000ms, 35429ms total)
T0F54 465:533 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35452ms total)
T094C 465:557 JLINK_ResetPullsRESET(ON) (0000ms, 35452ms total)
T094C 465:557 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0029ms, 0029ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0036ms total)
               (0155ms, 35607ms total)
T0F54 466:741 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35608ms total)
T0F54 466:742 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35631ms total)
T0F54 467:961 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35632ms total)
T0F54 467:962 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35655ms total)
T0F54 469:145 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35656ms total)
T0F54 469:146 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35679ms total)
T0F54 470:346 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35680ms total)
T0F54 470:347 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 35704ms total)
T0F54 471:563 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35705ms total)
T0F54 471:564 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 35727ms total)
T0F54 472:765 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35728ms total)
T0F54 472:766 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35751ms total)
T0F54 473:942 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35752ms total)
T0F54 473:944 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35775ms total)
T0F54 475:162 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35776ms total)
T0F54 475:164 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35799ms total)
T0F54 476:360 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 35801ms total)
T0F54 476:362 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 35824ms total)
T0F54 477:564 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 35825ms total)
T0F54 477:565 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 35849ms total)
T094C 1539:282 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 35849ms total)
T094C 1539:282 JLINK_GetFirmwareString(...) (0000ms, 35849ms total)
T094C 1539:282 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 35849ms total)
T094C 1539:282 JLINK_GetDLLVersion()  returns 61200 (0001ms, 35850ms total)
T094C 1539:347 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0000ms, 35850ms total)
T094C 1539:399 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 35850ms total)
T094C 1539:462 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 35850ms total)
T094C 1539:463 JLINK_GetHWStatus(...)  returns 0x00 (0001ms, 35851ms total)
T094C 1539:464 JLINK_ClrRESET() (0003ms, 35854ms total)
T094C 1539:468 JLINK_SetRESET() (0001ms, 35855ms total)
T094C 1539:469 JLINK_ClrRESET() (0005ms, 35860ms total)
T094C 1539:474 JLINK_ClrTCK()  returns 0x00 (0003ms, 35863ms total)
T094C 1539:477 JLINK_SetRESET() (0002ms, 35865ms total)
T094C 1539:479 JLINK_Clock()  returns 0x00 (0001ms, 35866ms total)
T094C 1539:480 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 35866ms total)
T094C 1539:480 JLINK_SetSpeed(50) (0001ms, 35867ms total)
T094C 1539:481 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 35867ms total)
T094C 1539:481 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 35875ms total)
T094C 1539:489 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 35875ms total)
T094C 1539:489 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 35875ms total)
T094C 1539:489 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 35875ms total)
T094C 1539:489 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0003ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 35878ms total)
T094C 1539:492 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0002ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 35880ms total)
T094C 1539:494 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0004ms, 35884ms total)
T094C 1539:498 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 35884ms total)
T094C 1539:498 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 35884ms total)
T094C 1539:498 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 35884ms total)
T094C 1539:498 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 35887ms total)
T094C 1539:501 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 35887ms total)
T094C 1539:501 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 35887ms total)
T094C 1539:501 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 35894ms total)
T094C 1539:508 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0008ms, 35902ms total)
T094C 1539:716 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0007ms, 35909ms total)
T094C 1539:723 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 35910ms total)
T094C 1539:750 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 35911ms total)
T094C 1539:751 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 35911ms total)
T094C 1539:751 JLINK_SetSpeed(4000) (0001ms, 35912ms total)
T094C 1539:752 JLINK_ResetPullsRESET(OFF) (0000ms, 35912ms total)
T094C 1539:752 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0182ms, 36094ms total)
T094C 1539:935 JLINK_Halt()  returns 0x00 (0004ms, 36098ms total)
T094C 1539:939 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 36098ms total)
T094C 1539:939 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0003ms, 36101ms total)
T0D68 1539:955 JLINK_IsHalted()  returns TRUE (0000ms, 36101ms total)
T0D68 1539:955 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0001ms, 36102ms total)
T0D68 1539:956 JLINK_ReadReg(R15 (PC))  returns 0xFFFFFFFE (0000ms, 36102ms total)
T094C 1539:974 JLINK_BeginDownload(Flags = 0x00) (0000ms, 36102ms total)
T094C 1539:974 JLINK_WriteMem(0x00000000, 0xF628 Bytes, ...) - Data: 90 2B 00 20 1D 91 00 00 15 92 00 00 15 92 00 00 ...  returns 0xF628 (0000ms, 36102ms total)
T094C 1539:974 JLINK_WriteMem(0x0000F628, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 36102ms total)
T0D68 1540:156 JLINK_IsHalted()  returns TRUE (0002ms, 36104ms total)
T094C 1540:159 JLINK_EndDownload() -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1328 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1328 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1328 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xAFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CPU_ReadMem(256 bytes @ 0x0000AD00) -- CPU_ReadMem(256 bytes @ 0x0000AE00) -- CPU_ReadMem(256 bytes @ 0x0000AF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xB000 - 0xBFFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000B000) -- CPU_ReadMem(256 bytes @ 0x0000B100) -- CPU_ReadMem(256 bytes @ 0x0000B200) -- CPU_ReadMem(256 bytes @ 0x0000B300) -- CPU_ReadMem(256 bytes @ 0x0000B400) -- CPU_ReadMem(256 bytes @ 0x0000B500) -- CPU_ReadMem(256 bytes @ 0x0000B600) -- CPU_ReadMem(256 bytes @ 0x0000B700) -- CPU_ReadMem(256 bytes @ 0x0000B800) -- CPU_ReadMem(256 bytes @ 0x0000B900) -- CPU_ReadMem(256 bytes @ 0x0000BA00)
 -- CPU_ReadMem(256 bytes @ 0x0000BB00) -- CPU_ReadMem(256 bytes @ 0x0000BC00) -- CPU_ReadMem(256 bytes @ 0x0000BD00) -- CPU_ReadMem(256 bytes @ 0x0000BE00) -- CPU_ReadMem(256 bytes @ 0x0000BF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xC000 - 0xCFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000C000) -- CPU_ReadMem(256 bytes @ 0x0000C100)
 -- CPU_ReadMem(256 bytes @ 0x0000C200) -- CPU_ReadMem(256 bytes @ 0x0000C300) -- CPU_ReadMem(256 bytes @ 0x0000C400) -- CPU_ReadMem(256 bytes @ 0x0000C500) -- CPU_ReadMem(256 bytes @ 0x0000C600) -- CPU_ReadMem(256 bytes @ 0x0000C700) -- CPU_ReadMem(256 bytes @ 0x0000C800) -- CPU_ReadMem(256 bytes @ 0x0000C900) -- CPU_ReadMem(256 bytes @ 0x0000CA00) -- CPU_ReadMem(256 bytes @ 0x0000CB00) -- CPU_ReadMem(256 bytes @ 0x0000CC00) -- CPU_ReadMem(256 bytes @ 0x0000CD00) -- CPU_ReadMem(256 bytes @ 0x0000CE00)
 -- CPU_ReadMem(256 bytes @ 0x0000CF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xD000 - 0xDFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000D000) -- CPU_ReadMem(256 bytes @ 0x0000D100) -- CPU_ReadMem(256 bytes @ 0x0000D200) -- CPU_ReadMem(256 bytes @ 0x0000D300) -- CPU_ReadMem(256 bytes @ 0x0000D400) -- CPU_ReadMem(256 bytes @ 0x0000D500)
 -- CPU_ReadMem(256 bytes @ 0x0000D600) -- CPU_ReadMem(256 bytes @ 0x0000D700) -- CPU_ReadMem(256 bytes @ 0x0000D800) -- CPU_ReadMem(256 bytes @ 0x0000D900) -- CPU_ReadMem(256 bytes @ 0x0000DA00) -- CPU_ReadMem(256 bytes @ 0x0000DB00) -- CPU_ReadMem(256 bytes @ 0x0000DC00) -- CPU_ReadMem(256 bytes @ 0x0000DD00) -- CPU_ReadMem(256 bytes @ 0x0000DE00) -- CPU_ReadMem(256 bytes @ 0x0000DF00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xE000 - 0xEFFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000E000) -- CPU_ReadMem(256 bytes @ 0x0000E100) -- CPU_ReadMem(256 bytes @ 0x0000E200) -- CPU_ReadMem(256 bytes @ 0x0000E300) -- CPU_ReadMem(256 bytes @ 0x0000E400) -- CPU_ReadMem(256 bytes @ 0x0000E500) -- CPU_ReadMem(256 bytes @ 0x0000E600) -- CPU_ReadMem(256 bytes @ 0x0000E700)
 -- CPU_ReadMem(256 bytes @ 0x0000E800) -- CPU_ReadMem(256 bytes @ 0x0000E900) -- CPU_ReadMem(256 bytes @ 0x0000EA00) -- CPU_ReadMem(256 bytes @ 0x0000EB00) -- CPU_ReadMem(256 bytes @ 0x0000EC00) -- CPU_ReadMem(256 bytes @ 0x0000ED00) -- CPU_ReadMem(256 bytes @ 0x0000EE00) -- CPU_ReadMem(256 bytes @ 0x0000EF00) -- CRC does not match for sectors 0-15 -- Comparing range 0xF000 - 0xF8FF (9 Sectors, 2 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000F000) -- CPU_ReadMem(256 bytes @ 0x0000F100) -- CPU_ReadMem(256 bytes @ 0x0000F200) -- CPU_ReadMem(256 bytes @ 0x0000F300) -- CPU_ReadMem(256 bytes @ 0x0000F400) -- CPU_ReadMem(256 bytes @ 0x0000F500) -- CPU_ReadMem(256 bytes @ 0x0000F600) -- CPU_ReadMem(256 bytes @ 0x0000F700) -- CPU_ReadMem(256 bytes @ 0x0000F800) -- CRC does not match for sectors 0-8 -- End of comparing flash
 -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000AFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B000 - 0x0000B3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B400 - 0x0000B7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000B800 - 0x0000BBFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000BC00 - 0x0000BFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C000 - 0x0000C3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C400 - 0x0000C7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000C800 - 0x0000CBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000CC00 - 0x0000CFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D000 - 0x0000D3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000D400 - 0x0000D7FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000D800 - 0x0000DBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000DC00 - 0x0000DFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E000 - 0x0000E3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E400 - 0x0000E7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000E800 - 0x0000EBFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000EC00 - 0x0000EFFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F000 - 0x0000F3FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x0000F400 - 0x0000F7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000F800 - 0x0000F8FF (001 Sector, 256 Bytes) -- End of flash programming -- 0x0000 - 0xF8FF (249 Sectors, 62 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory
 -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (63744 bytes) -- Total time needed: 4.693s (Prepare: 0.178s, Compare: 0.976s, Erase: 0.000s, Program: 2.204s, Verify: 1.268s, Restore: 0.065s)  returns 0xF900 (4686ms, 40788ms total)
T094C 1544:845 JLINK_ResetPullsRESET(ON) (0000ms, 40788ms total)
T094C 1544:847 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0030ms, 0030ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0006ms, 0036ms total)
               (0158ms, 40946ms total)
T094C 3135:075 JLINK_EMU_SelectByUSBSN(SerialNo = 260101224)  returns 0xFFFFFFFF (0000ms, 40946ms total)
T094C 3135:075 JLINK_GetFirmwareString(...) (0000ms, 40946ms total)
T094C 3135:075 JLINK_GetHardwareVersion()  returns 0x18A88 (0000ms, 40946ms total)
T094C 3135:075 JLINK_GetDLLVersion()  returns 61200 (0000ms, 40946ms total)
T094C 3135:135 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 40947ms total)
T094C 3135:166 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 40947ms total)
T094C 3135:258 JLINK_ExecCommand("device = ATSAMD21E18A", ...).   returns 0x00 (0000ms, 40948ms total)
T094C 3135:258 JLINK_GetHWStatus(...)  returns 0x00 (0002ms, 40950ms total)
T094C 3135:260 JLINK_ClrRESET() (0003ms, 40953ms total)
T094C 3135:264 JLINK_SetRESET() (0003ms, 40956ms total)
T094C 3135:267 JLINK_ClrRESET() (0003ms, 40959ms total)
T094C 3135:271 JLINK_ClrTCK()  returns 0x00 (0001ms, 40960ms total)
T094C 3135:272 JLINK_SetRESET() (0004ms, 40964ms total)
T094C 3135:276 JLINK_Clock()  returns 0x00 (0002ms, 40966ms total)
T094C 3135:278 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0001ms, 40967ms total)
T094C 3135:279 JLINK_SetSpeed(50) (0001ms, 40968ms total)
T094C 3135:280 JLINK_JTAG_StoreRaw(..., 0x108 Bits)  returns 0x00 (0000ms, 40968ms total)
T094C 3135:280 JLINK_JTAG_GetU32(BitPos = 227) >0x108 TIF>  returns 0x0BC11477 (0008ms, 40976ms total)
T094C 3135:288 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 40976ms total)
T094C 3135:288 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 40976ms total)
T094C 3135:288 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 40976ms total)
T094C 3135:288 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0xB9 (0002ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x0BC11477 (0000ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 40978ms total)
T094C 3135:290 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x01 (0003ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_GetU32(BitPos = 11)  returns 0x00000000 (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x02 (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_StoreRaw(..., 0x02 Bits)  returns 0x0B (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0D (0000ms, 40981ms total)
T094C 3135:293 JLINK_JTAG_GetU8(BitPos = 8) >0x35 TIF>  returns 0x19 (0002ms, 40983ms total)
T094C 3135:295 JLINK_JTAG_StoreRaw(..., 0x08 Bits)  returns 0x00 (0000ms, 40983ms total)
T094C 3135:295 JLINK_JTAG_StoreRaw(..., 0x03 Bits)  returns 0x08 (0000ms, 40983ms total)
T094C 3135:295 JLINK_JTAG_StoreRaw(..., 0x28 Bits)  returns 0x0B (0000ms, 40983ms total)
T094C 3135:295 JLINK_JTAG_GetU8(BitPos = 8) >0x33 TIF>  returns 0x09 (0003ms, 40986ms total)
T094C 3135:298 JLINK_JTAG_GetU32(BitPos = 11)  returns 0xF0000001 (0000ms, 40986ms total)
T094C 3135:298 JLINK_JTAG_GetU8(BitPos = 43)  returns 0x03 (0000ms, 40986ms total)
T094C 3135:298 JLINK_WriteU32(0x41002100, 0x00000010) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100)  returns 0x00 (0007ms, 40993ms total)
T094C 3135:305 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 02  returns 0x00 (0008ms, 41001ms total)
T094C 3135:513 JLINK_ReadMem (0x41002101, 0x0001 Bytes, ...) -- CPU is running -- CPU_ReadMem(1 bytes @ 0x41002101) - Data: 03  returns 0x00 (0008ms, 41009ms total)
T094C 3135:521 JLINK_ExecCommand("ProjectFile = C:\Users\f\Desktop\usbtmc - working copy\GccBoardProject2\jlink.config", ...).   returns 0x00 (0001ms, 41010ms total)
T094C 3135:549 JLINK_ExecCommand("Device = ATSAMD21E18A", ...).   returns 0x00 (0001ms, 41011ms total)
T094C 3135:550 JLINK_TIF_Select(JLINKARM_TIF_SWD)  returns 0x00 (0000ms, 41011ms total)
T094C 3135:550 JLINK_SetSpeed(4000) (0001ms, 41012ms total)
T094C 3135:551 JLINK_ResetPullsRESET(OFF) (0000ms, 41012ms total)
T094C 3135:551 JLINK_Connect() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x28 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>
Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000)
 -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)
ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+  returns 0x00 (0164ms, 41176ms total)
T094C 3135:715 JLINK_Halt()  returns 0x00 (0005ms, 41181ms total)
T094C 3135:722 JLINK_JTAG_GetDeviceID(DeviceIndex = 0)  returns 0x00 (0000ms, 41181ms total)
T094C 3135:722 JLINK_ReadMemU32(0x41002018, 0x0001 Items, ...) -- CPU_ReadMem(4 bytes @ 0x41002018) - Data: 0A 03 01 10  returns 0x01 (0002ms, 41183ms total)
T094C 3135:753 JLINK_BeginDownload(Flags = 0x00) (0000ms, 41183ms total)
T094C 3135:753 JLINK_WriteMem(0x00000000, 0xAA18 Bytes, ...) - Data: 90 2B 00 20 B5 49 00 00 B1 49 00 00 B1 49 00 00 ...  returns 0xAA18 (0001ms, 41184ms total)
T094C 3135:754 JLINK_WriteMem(0x0000AA18, 0x02B8 Bytes, ...) - Data: 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ...  returns 0x2B8 (0000ms, 41184ms total)
T0CA0 3135:761 JLINK_IsHalted()  returns TRUE (0000ms, 41184ms total)
T0CA0 3135:761 JLINK_GetMOEs(...) -- CPU_ReadMem(4 bytes @ 0xE000ED30)  returns 0x01 (0001ms, 41185ms total)
T0CA0 3135:762 JLINK_ReadReg(R15 (PC)) -- CPU_ReadMem(4 bytes @ 0x41006004) -- -------------------------------------- -- Start of determining dirty areas in flash cache -- End of determining dirty areas -- Start of preparing flash programming -- Calculating RAM usage -- RAM usage = 9280 Bytes -- Preserving CPU registers -- Preparing memory -- Determining CPU clock frequency -- CPU frequency = 1327 kHz -- Preparing target -- Preserving target RAM temporarily used for programming -- Downloading RAMCode
 -- Checking target RAM & preparing RAMCode -- End of preparing flash programmingCPU is running at very low speed (1327 kHz). Readback will be performed instead of CRC calculation. -- CPU is running at 1327 kHz. -- Start of comparing flash -- Read back was estimated as fastest method -- Comparing range 0x0000 - 0x0FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00000000)
 -- CPU_ReadMem(256 bytes @ 0x00000100) -- CPU_ReadMem(256 bytes @ 0x00000200) -- CPU_ReadMem(256 bytes @ 0x00000300) -- CPU_ReadMem(256 bytes @ 0x00000400) -- CPU_ReadMem(256 bytes @ 0x00000500) -- CPU_ReadMem(256 bytes @ 0x00000600) -- CPU_ReadMem(256 bytes @ 0x00000700) -- CPU_ReadMem(256 bytes @ 0x00000800) -- CPU_ReadMem(256 bytes @ 0x00000900) -- CPU_ReadMem(256 bytes @ 0x00000A00) -- CPU_ReadMem(256 bytes @ 0x00000B00) -- CPU_ReadMem(256 bytes @ 0x00000C00) -- CPU_ReadMem(256 bytes @ 0x00000D00)
 -- CPU_ReadMem(256 bytes @ 0x00000E00) -- CPU_ReadMem(256 bytes @ 0x00000F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x1000 - 0x1FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00001000) -- CPU_ReadMem(256 bytes @ 0x00001100) -- CPU_ReadMem(256 bytes @ 0x00001200) -- CPU_ReadMem(256 bytes @ 0x00001300) -- CPU_ReadMem(256 bytes @ 0x00001400)
 -- CPU_ReadMem(256 bytes @ 0x00001500) -- CPU_ReadMem(256 bytes @ 0x00001600) -- CPU_ReadMem(256 bytes @ 0x00001700) -- CPU_ReadMem(256 bytes @ 0x00001800) -- CPU_ReadMem(256 bytes @ 0x00001900) -- CPU_ReadMem(256 bytes @ 0x00001A00) -- CPU_ReadMem(256 bytes @ 0x00001B00) -- CPU_ReadMem(256 bytes @ 0x00001C00) -- CPU_ReadMem(256 bytes @ 0x00001D00) -- CPU_ReadMem(256 bytes @ 0x00001E00) -- CPU_ReadMem(256 bytes @ 0x00001F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x2000 - 0x2FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00002000) -- CPU_ReadMem(256 bytes @ 0x00002100) -- CPU_ReadMem(256 bytes @ 0x00002200) -- CPU_ReadMem(256 bytes @ 0x00002300) -- CPU_ReadMem(256 bytes @ 0x00002400) -- CPU_ReadMem(256 bytes @ 0x00002500) -- CPU_ReadMem(256 bytes @ 0x00002600) -- CPU_ReadMem(256 bytes @ 0x00002700)
 -- CPU_ReadMem(256 bytes @ 0x00002800) -- CPU_ReadMem(256 bytes @ 0x00002900) -- CPU_ReadMem(256 bytes @ 0x00002A00) -- CPU_ReadMem(256 bytes @ 0x00002B00) -- CPU_ReadMem(256 bytes @ 0x00002C00) -- CPU_ReadMem(256 bytes @ 0x00002D00) -- CPU_ReadMem(256 bytes @ 0x00002E00) -- CPU_ReadMem(256 bytes @ 0x00002F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x3000 - 0x3FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00003000) -- CPU_ReadMem(256 bytes @ 0x00003100) -- CPU_ReadMem(256 bytes @ 0x00003200) -- CPU_ReadMem(256 bytes @ 0x00003300) -- CPU_ReadMem(256 bytes @ 0x00003400) -- CPU_ReadMem(256 bytes @ 0x00003500) -- CPU_ReadMem(256 bytes @ 0x00003600) -- CPU_ReadMem(256 bytes @ 0x00003700) -- CPU_ReadMem(256 bytes @ 0x00003800) -- CPU_ReadMem(256 bytes @ 0x00003900) -- CPU_ReadMem(256 bytes @ 0x00003A00)
 -- CPU_ReadMem(256 bytes @ 0x00003B00) -- CPU_ReadMem(256 bytes @ 0x00003C00) -- CPU_ReadMem(256 bytes @ 0x00003D00) -- CPU_ReadMem(256 bytes @ 0x00003E00) -- CPU_ReadMem(256 bytes @ 0x00003F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x4000 - 0x4FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00004000) -- CPU_ReadMem(256 bytes @ 0x00004100)
 -- CPU_ReadMem(256 bytes @ 0x00004200) -- CPU_ReadMem(256 bytes @ 0x00004300) -- CPU_ReadMem(256 bytes @ 0x00004400) -- CPU_ReadMem(256 bytes @ 0x00004500) -- CPU_ReadMem(256 bytes @ 0x00004600) -- CPU_ReadMem(256 bytes @ 0x00004700) -- CPU_ReadMem(256 bytes @ 0x00004800) -- CPU_ReadMem(256 bytes @ 0x00004900) -- CPU_ReadMem(256 bytes @ 0x00004A00) -- CPU_ReadMem(256 bytes @ 0x00004B00) -- CPU_ReadMem(256 bytes @ 0x00004C00) -- CPU_ReadMem(256 bytes @ 0x00004D00) -- CPU_ReadMem(256 bytes @ 0x00004E00)
 -- CPU_ReadMem(256 bytes @ 0x00004F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x5000 - 0x5FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00005000) -- CPU_ReadMem(256 bytes @ 0x00005100) -- CPU_ReadMem(256 bytes @ 0x00005200) -- CPU_ReadMem(256 bytes @ 0x00005300) -- CPU_ReadMem(256 bytes @ 0x00005400) -- CPU_ReadMem(256 bytes @ 0x00005500)
 -- CPU_ReadMem(256 bytes @ 0x00005600) -- CPU_ReadMem(256 bytes @ 0x00005700) -- CPU_ReadMem(256 bytes @ 0x00005800) -- CPU_ReadMem(256 bytes @ 0x00005900) -- CPU_ReadMem(256 bytes @ 0x00005A00) -- CPU_ReadMem(256 bytes @ 0x00005B00) -- CPU_ReadMem(256 bytes @ 0x00005C00) -- CPU_ReadMem(256 bytes @ 0x00005D00) -- CPU_ReadMem(256 bytes @ 0x00005E00) -- CPU_ReadMem(256 bytes @ 0x00005F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0x6000 - 0x6FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00006000) -- CPU_ReadMem(256 bytes @ 0x00006100) -- CPU_ReadMem(256 bytes @ 0x00006200) -- CPU_ReadMem(256 bytes @ 0x00006300) -- CPU_ReadMem(256 bytes @ 0x00006400) -- CPU_ReadMem(256 bytes @ 0x00006500) -- CPU_ReadMem(256 bytes @ 0x00006600) -- CPU_ReadMem(256 bytes @ 0x00006700)
 -- CPU_ReadMem(256 bytes @ 0x00006800) -- CPU_ReadMem(256 bytes @ 0x00006900) -- CPU_ReadMem(256 bytes @ 0x00006A00) -- CPU_ReadMem(256 bytes @ 0x00006B00) -- CPU_ReadMem(256 bytes @ 0x00006C00) -- CPU_ReadMem(256 bytes @ 0x00006D00) -- CPU_ReadMem(256 bytes @ 0x00006E00) -- CPU_ReadMem(256 bytes @ 0x00006F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x7000 - 0x7FFF (16 Sectors, 4 KB), using multi-block CRC calculation
 -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00007000) -- CPU_ReadMem(256 bytes @ 0x00007100) -- CPU_ReadMem(256 bytes @ 0x00007200) -- CPU_ReadMem(256 bytes @ 0x00007300) -- CPU_ReadMem(256 bytes @ 0x00007400) -- CPU_ReadMem(256 bytes @ 0x00007500) -- CPU_ReadMem(256 bytes @ 0x00007600) -- CPU_ReadMem(256 bytes @ 0x00007700) -- CPU_ReadMem(256 bytes @ 0x00007800) -- CPU_ReadMem(256 bytes @ 0x00007900) -- CPU_ReadMem(256 bytes @ 0x00007A00)
 -- CPU_ReadMem(256 bytes @ 0x00007B00) -- CPU_ReadMem(256 bytes @ 0x00007C00) -- CPU_ReadMem(256 bytes @ 0x00007D00) -- CPU_ReadMem(256 bytes @ 0x00007E00) -- CPU_ReadMem(256 bytes @ 0x00007F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x8000 - 0x8FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00008000) -- CPU_ReadMem(256 bytes @ 0x00008100)
 -- CPU_ReadMem(256 bytes @ 0x00008200) -- CPU_ReadMem(256 bytes @ 0x00008300) -- CPU_ReadMem(256 bytes @ 0x00008400) -- CPU_ReadMem(256 bytes @ 0x00008500) -- CPU_ReadMem(256 bytes @ 0x00008600) -- CPU_ReadMem(256 bytes @ 0x00008700) -- CPU_ReadMem(256 bytes @ 0x00008800) -- CPU_ReadMem(256 bytes @ 0x00008900) -- CPU_ReadMem(256 bytes @ 0x00008A00) -- CPU_ReadMem(256 bytes @ 0x00008B00) -- CPU_ReadMem(256 bytes @ 0x00008C00) -- CPU_ReadMem(256 bytes @ 0x00008D00) -- CPU_ReadMem(256 bytes @ 0x00008E00)
 -- CPU_ReadMem(256 bytes @ 0x00008F00) -- CRC does not match for sectors 0-15 -- Comparing range 0x9000 - 0x9FFF (16 Sectors, 4 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x00009000) -- CPU_ReadMem(256 bytes @ 0x00009100) -- CPU_ReadMem(256 bytes @ 0x00009200) -- CPU_ReadMem(256 bytes @ 0x00009300) -- CPU_ReadMem(256 bytes @ 0x00009400) -- CPU_ReadMem(256 bytes @ 0x00009500)
 -- CPU_ReadMem(256 bytes @ 0x00009600) -- CPU_ReadMem(256 bytes @ 0x00009700) -- CPU_ReadMem(256 bytes @ 0x00009800) -- CPU_ReadMem(256 bytes @ 0x00009900) -- CPU_ReadMem(256 bytes @ 0x00009A00) -- CPU_ReadMem(256 bytes @ 0x00009B00) -- CPU_ReadMem(256 bytes @ 0x00009C00) -- CPU_ReadMem(256 bytes @ 0x00009D00) -- CPU_ReadMem(256 bytes @ 0x00009E00) -- CPU_ReadMem(256 bytes @ 0x00009F00) -- CRC does not match for sectors 0-15
 -- Comparing range 0xA000 - 0xACFF (13 Sectors, 3 KB), using multi-block CRC calculation -- CRC check is not supported by this flash bank. Switched to read back method. -- CPU_ReadMem(256 bytes @ 0x0000A000) -- CPU_ReadMem(256 bytes @ 0x0000A100) -- CPU_ReadMem(256 bytes @ 0x0000A200) -- CPU_ReadMem(256 bytes @ 0x0000A300) -- CPU_ReadMem(256 bytes @ 0x0000A400) -- CPU_ReadMem(256 bytes @ 0x0000A500) -- CPU_ReadMem(256 bytes @ 0x0000A600) -- CPU_ReadMem(256 bytes @ 0x0000A700)
 -- CPU_ReadMem(256 bytes @ 0x0000A800) -- CPU_ReadMem(256 bytes @ 0x0000A900) -- CPU_ReadMem(256 bytes @ 0x0000AA00) -- CPU_ReadMem(256 bytes @ 0x0000AB00) -- CPU_ReadMem(256 bytes @ 0x0000AC00) -- CRC does not match for sectors 0-12 -- End of comparing flash -- Start of erasing sectors -- End of erasing sectors -- Start of flash programming -- Programming range 0x00000000 - 0x000003FF (004 Sectors, 1024 Bytes) -- Programming range 0x00000400 - 0x000007FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00000800 - 0x00000BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00000C00 - 0x00000FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001000 - 0x000013FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001400 - 0x000017FF (004 Sectors, 1024 Bytes) -- Programming range 0x00001800 - 0x00001BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00001C00 - 0x00001FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002000 - 0x000023FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00002400 - 0x000027FF (004 Sectors, 1024 Bytes) -- Programming range 0x00002800 - 0x00002BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00002C00 - 0x00002FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003000 - 0x000033FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003400 - 0x000037FF (004 Sectors, 1024 Bytes) -- Programming range 0x00003800 - 0x00003BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00003C00 - 0x00003FFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00004000 - 0x000043FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004400 - 0x000047FF (004 Sectors, 1024 Bytes) -- Programming range 0x00004800 - 0x00004BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00004C00 - 0x00004FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00005000 - 0x000053FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005400 - 0x000057FF (004 Sectors, 1024 Bytes) -- Programming range 0x00005800 - 0x00005BFF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00005C00 - 0x00005FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006000 - 0x000063FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006400 - 0x000067FF (004 Sectors, 1024 Bytes) -- Programming range 0x00006800 - 0x00006BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00006C00 - 0x00006FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007000 - 0x000073FF (004 Sectors, 1024 Bytes) -- Programming range 0x00007400 - 0x000077FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00007800 - 0x00007BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00007C00 - 0x00007FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008000 - 0x000083FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008400 - 0x000087FF (004 Sectors, 1024 Bytes) -- Programming range 0x00008800 - 0x00008BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00008C00 - 0x00008FFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009000 - 0x000093FF (004 Sectors, 1024 Bytes)
 -- Programming range 0x00009400 - 0x000097FF (004 Sectors, 1024 Bytes) -- Programming range 0x00009800 - 0x00009BFF (004 Sectors, 1024 Bytes) -- Programming range 0x00009C00 - 0x00009FFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A000 - 0x0000A3FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A400 - 0x0000A7FF (004 Sectors, 1024 Bytes) -- Programming range 0x0000A800 - 0x0000ABFF (004 Sectors, 1024 Bytes) -- Programming range 0x0000AC00 - 0x0000ACFF (001 Sector, 256 Bytes)
 -- End of flash programming -- 0x0000 - 0xACFF (173 Sectors, 43 KB) -- Start of verifying flash -- Checksum calculation was estimated as fastest method -- Checksum is not supported by this flash bank. Switched to read back method. -- End of verifying flash -- Start of restoring -- Restoring RAMCode -- Restoring target memory -- Restore target -- Restore memory -- Restoring CPU registers -- End of restoring -- Flash programming performed for 1 range (44288 bytes)
 -- Total time needed: 3.335s (Prepare: 0.181s, Compare: 0.671s, Erase: 0.000s, Program: 1.536s, Verify: 0.880s, Restore: 0.065s)  returns 0xFFFFFFFE (3339ms, 44524ms total)
T094C 3139:104 JLINK_EndDownload()  returns 0x00 (0000ms, 44524ms total)
T094C 3139:104 JLINK_ResetPullsRESET(ON) (0000ms, 44524ms total)
T094C 3139:104 JLINK_ResetNoHalt() >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x108 TIF>Found SWD-DP with ID 0x0BC11477 >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF>
 >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>AP-IDR: 0x04770031, Type: AHB-AP >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x28 TIF> >0x0D TIF> >0x21 TIF> >0x0D TIF> >0x21 TIF>Found Cortex-M0 r0p1, Little endian. -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU_ReadMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000)CoreSight components:ROMTbl 0 @ 41003000
 -- CPU_ReadMem(16 bytes @ 0x41003000) -- CPU_ReadMem(16 bytes @ 0xE00FFFF0) -- CPU_ReadMem(16 bytes @ 0xE00FFFE0)ROMTbl 0 [0]: 9F0FC000, CID: B105100D, PID: 000BB4C0 ROM TableROMTbl 1 @ E00FF000 -- CPU_ReadMem(16 bytes @ 0xE00FF000) -- CPU_ReadMem(16 bytes @ 0xE000EFF0) -- CPU_ReadMem(16 bytes @ 0xE000EFE0)ROMTbl 1 [0]: FFF0F000, CID: B105E00D, PID: 000BB008 SCS -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_ReadMem(16 bytes @ 0xE0001FF0) -- CPU_ReadMem(16 bytes @ 0xE0001FE0)
ROMTbl 1 [1]: FFF02000, CID: B105E00D, PID: 000BB00A DWT -- CPU_ReadMem(16 bytes @ 0xE0002FF0) -- CPU_ReadMem(16 bytes @ 0xE0002FE0)ROMTbl 1 [2]: FFF03000, CID: B105E00D, PID: 000BB00B FPB -- CPU_ReadMem(16 bytes @ 0x41006FF0) -- CPU_ReadMem(16 bytes @ 0x41006FE0)ROMTbl 0 [1]: 00003000, CID: B105900D, PID: 001BB932 MTB-M0+
                JLINK_Reset() -- CPU_ReadMem(4 bytes @ 0x20000000) -- CPU_WriteMem(4 bytes @ 0x20000000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000EDFC) -- CPU_WriteMem(4 bytes @ 0xE000ED0C) -- CPU is running -- CPU_ReadMem(4 bytes @ 0xE000EDF0) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_ReadMem(4 bytes @ 0x41002100) -- CPU is running -- CPU_WriteMem(4 bytes @ 0xE000EDFC)
 -- CPU_WriteMem(4 bytes @ 0xE0002000) -- CPU_ReadMem(4 bytes @ 0xE000EDFC) -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) (0030ms, 0030ms total)
                JLINK_Go() -- CPU_ReadMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0001000) -- CPU_WriteMem(4 bytes @ 0xE0002008) -- CPU_WriteMem(4 bytes @ 0xE000200C) -- CPU_WriteMem(4 bytes @ 0xE0002010) -- CPU_WriteMem(4 bytes @ 0xE0002014) -- CPU_WriteMem(4 bytes @ 0xE0001004) (0007ms, 0037ms total)
               (0160ms, 44684ms total)
T0FB4 5013:685 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0004ms, 44688ms total)
T0FB4 5013:689 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0025ms, 44713ms total)
T0FB4 5015:056 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44714ms total)
T0FB4 5015:057 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44737ms total)
T0FB4 5016:215 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 44737ms total)
T0FB4 5016:216 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 44759ms total)
T0FB4 5017:401 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44760ms total)
T0FB4 5017:402 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44783ms total)
T0FB4 5018:613 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44784ms total)
T0FB4 5018:614 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44807ms total)
T0FB4 5019:813 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 44807ms total)
T0FB4 5019:814 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0022ms, 44829ms total)
T0FB4 5021:058 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44830ms total)
T0FB4 5021:059 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44853ms total)
T0FB4 5022:272 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44854ms total)
T0FB4 5022:273 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44877ms total)
T0FB4 5023:466 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44878ms total)
T0FB4 5023:467 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44901ms total)
T0FB4 5024:733 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 44903ms total)
T0FB4 5024:735 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0045ms, 44948ms total)
T0FB4 5025:954 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 44950ms total)
T0FB4 5025:956 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44973ms total)
T0FB4 5027:153 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44974ms total)
T0FB4 5027:154 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 44997ms total)
T0FB4 5028:364 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 44998ms total)
T0FB4 5028:366 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45021ms total)
T0FB4 5029:751 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0002ms, 45023ms total)
T0FB4 5029:755 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0048ms, 45071ms total)
T0FB4 5030:994 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 45072ms total)
T0FB4 5030:995 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45095ms total)
T0FB4 5032:158 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 45095ms total)
T0FB4 5032:158 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0024ms, 45119ms total)
T0FB4 5033:321 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 45120ms total)
T0FB4 5033:322 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45143ms total)
T0FB4 5034:460 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 45144ms total)
T0FB4 5034:461 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45167ms total)
T0FB4 5035:605 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0000ms, 45167ms total)
T0FB4 5035:606 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45190ms total)
T0FB4 5036:752 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 45191ms total)
T0FB4 5036:753 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0026ms, 45217ms total)
T0FB4 5037:903 JLINK_EMU_GetList(InterfaceMask = 0x00000001, MaxInfos = 0x00000032) [0]: USB, S/N: 260101224  returns 0x01 (0001ms, 45218ms total)
T0FB4 5037:904 JLINK_EMU_GetList(InterfaceMask = 0x00000002, MaxInfos = 0x00000032)   returns 0x00 (0023ms, 45241ms total)
